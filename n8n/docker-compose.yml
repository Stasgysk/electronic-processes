version: '3.8'

volumes:
  db_storage:
  n8n_storage:

services:
  postgres:
    image: postgres:16
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - db_storage:/var/lib/postgresql/data
      - ./init-data.sh:/docker-entrypoint-initdb.d/init-data.sh
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - n8n-postgres-node-network

  n8n:
    image: docker.n8n.io/n8nio/n8n
    restart: unless-stopped
    env_file: .env
    ports:
      - "${N8N_PORT}:5678"
    environment:
      DB_AUTOMATION_MIGRATION: true
      DB_TYPE: postgresdb
      DB_POSTGRESDB_HOST: postgres
      DB_POSTGRESDB_PORT: 5432
      DB_POSTGRESDB_DATABASE: ${POSTGRES_DB}
      DB_POSTGRESDB_USER: ${POSTGRES_USER}
      DB_POSTGRESDB_PASSWORD: ${POSTGRES_PASSWORD}
      N8N_PORT: 5678
      N8N_HOST: ${N8N_HOST}
      WEBHOOK_URL: http://${N8N_HOST}:${N8N_PORT}/
      N8N_BASIC_AUTH_ACTIVE: true
      N8N_BASIC_AUTH_USER: ${N8N_BASIC_AUTH_USER}
      N8N_BASIC_AUTH_PASSWORD: ${N8N_BASIC_AUTH_PASSWORD}
      N8N_ENCRYPTION_KEY: ${N8N_ENCRYPTION_KEY}
      N8N_EDITOR_BASE_URL: ${N8N_EDITOR_BASE_URL}
      INTERNAL_SECRET: ${INTERNAL_SECRET}
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - n8n_storage:/home/node/.n8n
      - ./n8n-init.js:/home/node/n8n-init.js
      - ./workflows:/home/node/workflows
      - ./credentials:/home/node/credentials
      - ./custom:/home/node/.n8n/custom
    networks:
      - n8n-postgres-node-network

networks:
  n8n-postgres-node-network:
    external: true
